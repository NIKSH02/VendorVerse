import React from "react";
import { motion } from "framer-motion";

const requestItems = [
  { 
    name: "Fresh Onions",
    detail: "Premium Quality Red Onions",
    time: "2 min ago",
    quantity: "20 KG",
    location: "Chandni Chowk",
    urgency: "High",
    price: "â‚¹35/kg"
  },
  { 
    name: "Farm Tomatoes",
    detail: "Fresh Farm Tomatoes",
    time: "5 min ago",
    quantity: "50 KG",
    location: "Karol Bagh",
    urgency: "Medium",
    price: "â‚¹40/kg"
  },
  { 
    name: "Fresh Paneer",
    detail: "Pure & Fresh Daily",
    time: "10 min ago",
    quantity: "30 KG",
    location: "Lajpat Nagar",
    urgency: "Low",
    price: "â‚¹280/kg"
  }
];

const requestStyles = [
  { bg: "from-orange-400 to-red-500", accent: "text-orange-500", icon: "ðŸŒ¾", patternClass: "bg-dots-orange" },
  { bg: "from-amber-400 to-orange-500", accent: "text-amber-500", icon: "ðŸ¥¬", patternClass: "bg-dots-amber" },
  { bg: "from-yellow-400 to-amber-500", accent: "text-yellow-600", icon: "ðŸ¥•", patternClass: "bg-dots-yellow" }
];

export default function NewRequestSection() {
  return (
    <section className="w-full py-16 px-4 bg-[#fff] dark:bg-[#181818] transition-colors duration-300">
      {/* Background Pattern */}
      <div className="absolute inset-0 opacity-40 dark:opacity-20">
        <div className="absolute inset-0 bg-gradient-to-r from-orange-500/10 to-orange-600/10" />
      </div>
      
      <div className="max-w-6xl mx-auto relative">
        {/* Section Header */}
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
            Latest Market<span className="text-[#ff9500]"> Requests</span>
          </h2>
          <p className="text-gray-600 dark:text-gray-300">
            Fresh demands from our local marketplace
          </p>
        </motion.div>

        {/* Request Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {requestItems.map((item, index) => (
            <motion.div
              key={index}
              className={`relative overflow-hidden rounded-2xl bg-gradient-to-br ${requestStyles[index].bg} p-1`}
              initial={{ opacity: 0, scale: 0.9, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              whileHover={{ scale: 1.02, y: -5 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="bg-white dark:bg-[#181818] rounded-xl p-6 h-full relative overflow-hidden">
                {/* Decorative Pattern */}
                <div className={`absolute inset-0 opacity-5 ${requestStyles[index].patternClass}`} />
                <div className="absolute top-0 right-0 -mt-4 -mr-4 w-32 h-32 bg-gradient-to-br from-[#ff9500]/10 to-orange-600/10 rounded-full blur-xl" />
                
                {/* Header with Icon */}
                <div className="flex items-center mb-4">
                  <motion.div 
                    className="w-12 h-12 rounded-xl bg-gradient-to-br from-[#ff9500] to-orange-600 text-white flex justify-center items-center text-xl shadow-lg"
                    initial={{ rotate: -180, scale: 0 }}
                    animate={{ rotate: 0, scale: 1 }}
                    transition={{ duration: 0.5, delay: index * 0.1 + 0.2 }}
                  >
                    {requestStyles[index].icon}
                  </motion.div>
                  <div className="ml-4 flex-1">
                    <motion.h3 
                      className="text-xl font-bold text-gray-900 dark:text-white"
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.5, delay: index * 0.1 + 0.3 }}
                    >
                      {item.name}
                    </motion.h3>
                    <motion.p 
                      className={`text-sm ${requestStyles[index].accent}`}
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ duration: 0.5, delay: index * 0.1 + 0.4 }}
                    >
                      {item.time}
                    </motion.p>
                  </div>
                  <motion.div
                    className="text-lg font-bold text-[#ff9500]"
                    initial={{ opacity: 0, scale: 0 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.5, delay: index * 0.1 + 0.5 }}
                  >
                    {item.price}
                  </motion.div>
                </div>

                {/* Details with Icons */}
                <motion.div 
                  className="space-y-3"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 + 0.6 }}
                >
                  <div className="flex items-center text-gray-600 dark:text-gray-300">
                    <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />
                    </svg>
                    <span>{item.quantity}</span>
                  </div>
                  <div className="flex items-center text-gray-600 dark:text-gray-300">
                    <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    <span>{item.location}</span>
                  </div>
                  
                  {/* Priority Badge */}
                  <div className="flex items-center">
                    <div className={`px-3 py-1 rounded-full text-sm font-medium
                      ${item.urgency === 'High' ? 'bg-red-100 text-red-600 dark:bg-red-900/30' :
                        item.urgency === 'Medium' ? 'bg-yellow-100 text-yellow-600 dark:bg-yellow-900/30' :
                        'bg-green-100 text-green-600 dark:bg-green-900/30'}`}>
                      <span className={`inline-block w-2 h-2 rounded-full mr-2 align-middle
                        ${item.urgency === 'High' ? 'bg-red-500' :
                          item.urgency === 'Medium' ? 'bg-yellow-500' :
                          'bg-green-500'}`} />
                      {item.urgency} Priority
                    </div>
                  </div>
                </motion.div>

                {/* Action Button */}
                <motion.button
                  className="mt-6 w-full px-4 py-2 bg-gradient-to-r from-[#ff9500] to-orange-600 text-white rounded-lg font-medium shadow-lg"
                  whileHover={{ 
                    scale: 1.02,
                    boxShadow: "0 10px 20px rgba(255, 149, 0, 0.2)"
                  }}
                  whileTap={{ scale: 0.98 }}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 + 0.7 }}
                >
                  View Details
                </motion.button>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}
